// Code generated by protoc-gen-go. DO NOT EDIT.
// source: proto/currencies.proto

package pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CurrencyConvert struct {
	CurrencyName         string   `protobuf:"bytes,1,opt,name=currency_name,json=currencyName,proto3" json:"currency_name,omitempty"`
	CurrencyQty          float32  `protobuf:"fixed32,2,opt,name=currency_qty,json=currencyQty,proto3" json:"currency_qty,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CurrencyConvert) Reset()         { *m = CurrencyConvert{} }
func (m *CurrencyConvert) String() string { return proto.CompactTextString(m) }
func (*CurrencyConvert) ProtoMessage()    {}
func (*CurrencyConvert) Descriptor() ([]byte, []int) {
	return fileDescriptor_a173216835fc6be5, []int{0}
}

func (m *CurrencyConvert) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrencyConvert.Unmarshal(m, b)
}
func (m *CurrencyConvert) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrencyConvert.Marshal(b, m, deterministic)
}
func (m *CurrencyConvert) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrencyConvert.Merge(m, src)
}
func (m *CurrencyConvert) XXX_Size() int {
	return xxx_messageInfo_CurrencyConvert.Size(m)
}
func (m *CurrencyConvert) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrencyConvert.DiscardUnknown(m)
}

var xxx_messageInfo_CurrencyConvert proto.InternalMessageInfo

func (m *CurrencyConvert) GetCurrencyName() string {
	if m != nil {
		return m.CurrencyName
	}
	return ""
}

func (m *CurrencyConvert) GetCurrencyQty() float32 {
	if m != nil {
		return m.CurrencyQty
	}
	return 0
}

type CurrencyConvertResponse struct {
	From                 string               `protobuf:"bytes,1,opt,name=from,proto3" json:"from,omitempty"`
	FromAmount           float32              `protobuf:"fixed32,2,opt,name=from_amount,json=fromAmount,proto3" json:"from_amount,omitempty"`
	To                   string               `protobuf:"bytes,3,opt,name=to,proto3" json:"to,omitempty"`
	ToAmount             float32              `protobuf:"fixed32,4,opt,name=to_amount,json=toAmount,proto3" json:"to_amount,omitempty"`
	ConvertTime          *timestamp.Timestamp `protobuf:"bytes,5,opt,name=convert_time,json=convertTime,proto3" json:"convert_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{}             `json:"-"`
	XXX_unrecognized     []byte               `json:"-"`
	XXX_sizecache        int32                `json:"-"`
}

func (m *CurrencyConvertResponse) Reset()         { *m = CurrencyConvertResponse{} }
func (m *CurrencyConvertResponse) String() string { return proto.CompactTextString(m) }
func (*CurrencyConvertResponse) ProtoMessage()    {}
func (*CurrencyConvertResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a173216835fc6be5, []int{1}
}

func (m *CurrencyConvertResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CurrencyConvertResponse.Unmarshal(m, b)
}
func (m *CurrencyConvertResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CurrencyConvertResponse.Marshal(b, m, deterministic)
}
func (m *CurrencyConvertResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CurrencyConvertResponse.Merge(m, src)
}
func (m *CurrencyConvertResponse) XXX_Size() int {
	return xxx_messageInfo_CurrencyConvertResponse.Size(m)
}
func (m *CurrencyConvertResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CurrencyConvertResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CurrencyConvertResponse proto.InternalMessageInfo

func (m *CurrencyConvertResponse) GetFrom() string {
	if m != nil {
		return m.From
	}
	return ""
}

func (m *CurrencyConvertResponse) GetFromAmount() float32 {
	if m != nil {
		return m.FromAmount
	}
	return 0
}

func (m *CurrencyConvertResponse) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

func (m *CurrencyConvertResponse) GetToAmount() float32 {
	if m != nil {
		return m.ToAmount
	}
	return 0
}

func (m *CurrencyConvertResponse) GetConvertTime() *timestamp.Timestamp {
	if m != nil {
		return m.ConvertTime
	}
	return nil
}

type Currency struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Value                string   `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Currency) Reset()         { *m = Currency{} }
func (m *Currency) String() string { return proto.CompactTextString(m) }
func (*Currency) ProtoMessage()    {}
func (*Currency) Descriptor() ([]byte, []int) {
	return fileDescriptor_a173216835fc6be5, []int{2}
}

func (m *Currency) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Currency.Unmarshal(m, b)
}
func (m *Currency) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Currency.Marshal(b, m, deterministic)
}
func (m *Currency) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Currency.Merge(m, src)
}
func (m *Currency) XXX_Size() int {
	return xxx_messageInfo_Currency.Size(m)
}
func (m *Currency) XXX_DiscardUnknown() {
	xxx_messageInfo_Currency.DiscardUnknown(m)
}

var xxx_messageInfo_Currency proto.InternalMessageInfo

func (m *Currency) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Currency) GetValue() string {
	if m != nil {
		return m.Value
	}
	return ""
}

// GetListCurrenciesRequest represents a query to get all currencies with pagination and result/page option.
type GetListCurrenciesRequest struct {
	PageNumber           int32    `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	ResultPerPage        int32    `protobuf:"varint,2,opt,name=result_per_page,json=resultPerPage,proto3" json:"result_per_page,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetListCurrenciesRequest) Reset()         { *m = GetListCurrenciesRequest{} }
func (m *GetListCurrenciesRequest) String() string { return proto.CompactTextString(m) }
func (*GetListCurrenciesRequest) ProtoMessage()    {}
func (*GetListCurrenciesRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a173216835fc6be5, []int{3}
}

func (m *GetListCurrenciesRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetListCurrenciesRequest.Unmarshal(m, b)
}
func (m *GetListCurrenciesRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetListCurrenciesRequest.Marshal(b, m, deterministic)
}
func (m *GetListCurrenciesRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetListCurrenciesRequest.Merge(m, src)
}
func (m *GetListCurrenciesRequest) XXX_Size() int {
	return xxx_messageInfo_GetListCurrenciesRequest.Size(m)
}
func (m *GetListCurrenciesRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetListCurrenciesRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetListCurrenciesRequest proto.InternalMessageInfo

func (m *GetListCurrenciesRequest) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *GetListCurrenciesRequest) GetResultPerPage() int32 {
	if m != nil {
		return m.ResultPerPage
	}
	return 0
}

type GetListCurrenciesResponse struct {
	PageNumber           int32       `protobuf:"varint,1,opt,name=page_number,json=pageNumber,proto3" json:"page_number,omitempty"`
	Currencies           []*Currency `protobuf:"bytes,2,rep,name=currencies,proto3" json:"currencies,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *GetListCurrenciesResponse) Reset()         { *m = GetListCurrenciesResponse{} }
func (m *GetListCurrenciesResponse) String() string { return proto.CompactTextString(m) }
func (*GetListCurrenciesResponse) ProtoMessage()    {}
func (*GetListCurrenciesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a173216835fc6be5, []int{4}
}

func (m *GetListCurrenciesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetListCurrenciesResponse.Unmarshal(m, b)
}
func (m *GetListCurrenciesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetListCurrenciesResponse.Marshal(b, m, deterministic)
}
func (m *GetListCurrenciesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetListCurrenciesResponse.Merge(m, src)
}
func (m *GetListCurrenciesResponse) XXX_Size() int {
	return xxx_messageInfo_GetListCurrenciesResponse.Size(m)
}
func (m *GetListCurrenciesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetListCurrenciesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetListCurrenciesResponse proto.InternalMessageInfo

func (m *GetListCurrenciesResponse) GetPageNumber() int32 {
	if m != nil {
		return m.PageNumber
	}
	return 0
}

func (m *GetListCurrenciesResponse) GetCurrencies() []*Currency {
	if m != nil {
		return m.Currencies
	}
	return nil
}

// GetCurrenciesConvertRequest represents a convert query that can be used to conver (in the amount specified for each) one ore more currencies to a specific courency
type GetCurrenciesConvertRequest struct {
	From                 []*CurrencyConvert `protobuf:"bytes,1,rep,name=from,proto3" json:"from,omitempty"`
	To                   string             `protobuf:"bytes,2,opt,name=to,proto3" json:"to,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetCurrenciesConvertRequest) Reset()         { *m = GetCurrenciesConvertRequest{} }
func (m *GetCurrenciesConvertRequest) String() string { return proto.CompactTextString(m) }
func (*GetCurrenciesConvertRequest) ProtoMessage()    {}
func (*GetCurrenciesConvertRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_a173216835fc6be5, []int{5}
}

func (m *GetCurrenciesConvertRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCurrenciesConvertRequest.Unmarshal(m, b)
}
func (m *GetCurrenciesConvertRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCurrenciesConvertRequest.Marshal(b, m, deterministic)
}
func (m *GetCurrenciesConvertRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCurrenciesConvertRequest.Merge(m, src)
}
func (m *GetCurrenciesConvertRequest) XXX_Size() int {
	return xxx_messageInfo_GetCurrenciesConvertRequest.Size(m)
}
func (m *GetCurrenciesConvertRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCurrenciesConvertRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCurrenciesConvertRequest proto.InternalMessageInfo

func (m *GetCurrenciesConvertRequest) GetFrom() []*CurrencyConvert {
	if m != nil {
		return m.From
	}
	return nil
}

func (m *GetCurrenciesConvertRequest) GetTo() string {
	if m != nil {
		return m.To
	}
	return ""
}

type GetCurrenciesConvertResponse struct {
	Converted            []*CurrencyConvertResponse `protobuf:"bytes,1,rep,name=converted,proto3" json:"converted,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                   `json:"-"`
	XXX_unrecognized     []byte                     `json:"-"`
	XXX_sizecache        int32                      `json:"-"`
}

func (m *GetCurrenciesConvertResponse) Reset()         { *m = GetCurrenciesConvertResponse{} }
func (m *GetCurrenciesConvertResponse) String() string { return proto.CompactTextString(m) }
func (*GetCurrenciesConvertResponse) ProtoMessage()    {}
func (*GetCurrenciesConvertResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_a173216835fc6be5, []int{6}
}

func (m *GetCurrenciesConvertResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCurrenciesConvertResponse.Unmarshal(m, b)
}
func (m *GetCurrenciesConvertResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCurrenciesConvertResponse.Marshal(b, m, deterministic)
}
func (m *GetCurrenciesConvertResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCurrenciesConvertResponse.Merge(m, src)
}
func (m *GetCurrenciesConvertResponse) XXX_Size() int {
	return xxx_messageInfo_GetCurrenciesConvertResponse.Size(m)
}
func (m *GetCurrenciesConvertResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCurrenciesConvertResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCurrenciesConvertResponse proto.InternalMessageInfo

func (m *GetCurrenciesConvertResponse) GetConverted() []*CurrencyConvertResponse {
	if m != nil {
		return m.Converted
	}
	return nil
}

func init() {
	proto.RegisterType((*CurrencyConvert)(nil), "convmic.currencies.CurrencyConvert")
	proto.RegisterType((*CurrencyConvertResponse)(nil), "convmic.currencies.CurrencyConvertResponse")
	proto.RegisterType((*Currency)(nil), "convmic.currencies.Currency")
	proto.RegisterType((*GetListCurrenciesRequest)(nil), "convmic.currencies.GetListCurrenciesRequest")
	proto.RegisterType((*GetListCurrenciesResponse)(nil), "convmic.currencies.GetListCurrenciesResponse")
	proto.RegisterType((*GetCurrenciesConvertRequest)(nil), "convmic.currencies.GetCurrenciesConvertRequest")
	proto.RegisterType((*GetCurrenciesConvertResponse)(nil), "convmic.currencies.GetCurrenciesConvertResponse")
}

func init() { proto.RegisterFile("proto/currencies.proto", fileDescriptor_a173216835fc6be5) }

var fileDescriptor_a173216835fc6be5 = []byte{
	// 503 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0x5d, 0x8b, 0xd3, 0x40,
	0x14, 0x35, 0xd9, 0x56, 0xb7, 0xb7, 0xfb, 0x01, 0x83, 0x68, 0xec, 0x2e, 0x6c, 0xcd, 0x8a, 0x14,
	0xd4, 0x44, 0xaa, 0xe0, 0x8b, 0x3e, 0x68, 0x1f, 0x16, 0x41, 0x96, 0x75, 0xf4, 0x45, 0x5f, 0x42,
	0x92, 0xbd, 0x0d, 0xc1, 0x4e, 0x26, 0x3b, 0x99, 0x14, 0xea, 0x4f, 0xf3, 0x0f, 0xf9, 0x37, 0x64,
	0xbe, 0xda, 0xa2, 0xad, 0xdb, 0xa7, 0x24, 0x67, 0xce, 0x3d, 0xe7, 0xde, 0x7b, 0x32, 0xf0, 0xa0,
	0x16, 0x5c, 0xf2, 0x38, 0x6f, 0x85, 0xc0, 0x2a, 0x2f, 0xb1, 0x89, 0x34, 0x40, 0x48, 0xce, 0xab,
	0x39, 0x2b, 0xf3, 0x68, 0x75, 0x32, 0x38, 0x2b, 0x38, 0x2f, 0x66, 0x18, 0x6b, 0x46, 0xd6, 0x4e,
	0x63, 0x59, 0x32, 0x6c, 0x64, 0xca, 0x6a, 0x53, 0x14, 0x7e, 0x83, 0xe3, 0x89, 0xa1, 0x2f, 0x26,
	0xbc, 0x9a, 0xa3, 0x90, 0xe4, 0x1c, 0x0e, 0xad, 0xc2, 0x22, 0xa9, 0x52, 0x86, 0x81, 0x37, 0xf4,
	0x46, 0x3d, 0x7a, 0xe0, 0xc0, 0xcb, 0x94, 0x21, 0x79, 0x0c, 0xcb, 0xef, 0xe4, 0x46, 0x2e, 0x02,
	0x7f, 0xe8, 0x8d, 0x7c, 0xda, 0x77, 0xd8, 0x67, 0xb9, 0x08, 0x7f, 0x79, 0xf0, 0xf0, 0x2f, 0x6d,
	0x8a, 0x4d, 0xcd, 0xab, 0x06, 0x09, 0x81, 0xce, 0x54, 0x70, 0x66, 0xa5, 0xf5, 0x3b, 0x39, 0x83,
	0xbe, 0x7a, 0x26, 0x29, 0xe3, 0x6d, 0x25, 0xad, 0x22, 0x28, 0xe8, 0xbd, 0x46, 0xc8, 0x11, 0xf8,
	0x92, 0x07, 0x7b, 0xba, 0xc4, 0x97, 0x9c, 0x9c, 0x40, 0x4f, 0x72, 0x47, 0xef, 0x68, 0xfa, 0xbe,
	0xe4, 0x96, 0xfc, 0x0e, 0x0e, 0x72, 0x63, 0x9a, 0xa8, 0x99, 0x83, 0xee, 0xd0, 0x1b, 0xf5, 0xc7,
	0x83, 0xc8, 0x2c, 0x24, 0x72, 0x0b, 0x89, 0xbe, 0xba, 0x85, 0xd0, 0xbe, 0xe5, 0x2b, 0x24, 0x7c,
	0x0d, 0xfb, 0xae, 0x77, 0xd5, 0xec, 0xda, 0x1e, 0xf4, 0x3b, 0xb9, 0x0f, 0xdd, 0x79, 0x3a, 0x6b,
	0x51, 0xb7, 0xd9, 0xa3, 0xe6, 0x23, 0xcc, 0x21, 0xb8, 0x40, 0xf9, 0xa9, 0x6c, 0xe4, 0x64, 0x99,
	0x01, 0xc5, 0x9b, 0x16, 0x1b, 0xa9, 0xc6, 0xab, 0xd3, 0x02, 0x93, 0xaa, 0x65, 0x19, 0x0a, 0x2d,
	0xd6, 0xa5, 0xa0, 0xa0, 0x4b, 0x8d, 0x90, 0xa7, 0x70, 0x2c, 0xb0, 0x69, 0x67, 0x32, 0xa9, 0x51,
	0x24, 0xea, 0x40, 0x8b, 0x77, 0xe9, 0xa1, 0x81, 0xaf, 0x50, 0x5c, 0xa5, 0x05, 0x86, 0x3f, 0xe1,
	0xd1, 0x06, 0x13, 0xbb, 0xd8, 0x5b, 0x5d, 0xde, 0x02, 0xac, 0xfe, 0x8f, 0xc0, 0x1f, 0xee, 0x8d,
	0xfa, 0xe3, 0xd3, 0xe8, 0xdf, 0x5f, 0x27, 0x72, 0xe3, 0xd3, 0x35, 0x7e, 0x38, 0x85, 0x93, 0x0b,
	0x5c, 0xf3, 0x5d, 0xe6, 0x6a, 0x66, 0x7c, 0xb3, 0x8c, 0x55, 0xc9, 0x9e, 0xff, 0x4f, 0xd6, 0x55,
	0x9a, 0xec, 0x4d, 0xb4, 0xbe, 0x8b, 0x36, 0x2c, 0xe1, 0x74, 0xb3, 0x8f, 0x1d, 0xf3, 0x23, 0xf4,
	0x6c, 0x5a, 0x78, 0x6d, 0xdd, 0x9e, 0xed, 0xe2, 0x66, 0xeb, 0xe9, 0xaa, 0x7a, 0xfc, 0xdb, 0x83,
	0x23, 0x7b, 0xfc, 0x05, 0xc5, 0xbc, 0xcc, 0x91, 0x20, 0x74, 0xd4, 0x7a, 0xc9, 0xf3, 0x4d, 0x92,
	0xdb, 0x02, 0x1e, 0xbc, 0xd8, 0x91, 0x6d, 0x5a, 0x08, 0xef, 0x90, 0x0a, 0xee, 0xb9, 0x3b, 0x17,
	0x6f, 0xa9, 0xdd, 0xb6, 0xe9, 0xc1, 0xcb, 0xdd, 0x0b, 0x9c, 0xdf, 0x87, 0x27, 0xdf, 0xc3, 0xac,
	0x94, 0x59, 0x9b, 0xff, 0x40, 0x19, 0x71, 0x51, 0xc4, 0xd7, 0xbc, 0x94, 0x2c, 0x2d, 0xca, 0x3c,
	0xb6, 0x62, 0x71, 0x9d, 0x65, 0x77, 0xf5, 0xd5, 0x78, 0xf5, 0x27, 0x00, 0x00, 0xff, 0xff, 0x91,
	0x14, 0x74, 0xa4, 0x67, 0x04, 0x00, 0x00,
}
